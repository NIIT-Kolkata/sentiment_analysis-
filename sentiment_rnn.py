# -*- coding: utf-8 -*-
"""Untitled41.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BE1bUuEtyxBfUtVTIfd4NRmurXgUROq-
"""

!git clone https://github.com/NIIT-Kolkata/sentiment_analysis-

import numpy as np
import pandas as pd

df=pd.read_csv('/content/sentiment_analysis-/updated_sentiment_analysis(2).csv')

df.head()

df=df.sample(10000)
data=df

df.head()

df=df.sample(10000)
data=df

from keras.preprocessing.text import Tokenizer
from keras.preprocessing.sequence import pad_sequences

tokenizer = Tokenizer(num_words=500, split=' ')
tokenizer.fit_on_texts(df['review'].values)
x = tokenizer.texts_to_sequences(df['review'])

x = pad_sequences(x, maxlen=80)
y = df['sentiment_positive']





from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test = train_test_split(x,y,random_state=2021,test_size=0.1)





from tensorflow.keras.models import Sequential

from tensorflow.keras.layers import Dense, Embedding, LSTM

rnn_model=Sequential()

rnn_model.add(Embedding(500, 64, input_length=80))

rnn_model.add(LSTM(192, dropout=0.2, recurrent_dropout=0.2, return_sequences = True,activation='linear'))

rnn_model.add(LSTM(96, dropout=0.2, recurrent_dropout=0.2,activation='linear'))

rnn_model.add(Dense(1, activation='sigmoid'))

rnn_model.compile(optimizer='adam', loss="binary_crossentropy", metrics=['accuracy'])

rnn_model.fit(
    x_train, y_train,
    validation_data = (x_test, y_test),
    epochs = 10,batch_size=32)

